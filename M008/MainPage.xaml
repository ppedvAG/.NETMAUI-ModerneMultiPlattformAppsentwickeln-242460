<?xml version="1.0" encoding="utf-8" ?>
<ContentPage xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
			 xmlns:local="clr-namespace:M008"
			 xmlns:sys="clr-namespace:System;assembly=System.Runtime"
			 xmlns:http="clr-namespace:System.Net;assembly=System.Net"
             x:Class="M008.MainPage"
			 BindingContext="{Binding Source={RelativeSource Self}}">
	<ContentPage.Resources>
		<local:MarkeToImageConverter x:Key="ImgConv"/>
		<local:StringToMarkeConverter x:Key="SMConv"/>
	</ContentPage.Resources>
	<ScrollView>
		<VerticalStackLayout Spacing="10">
			<!--DataBinding-->
			<!--Binding zw. GUI-Komponente und Backend Property-->
		
			<!--Zwei neue Anforderungen: BindingContext, INotifyPropertyChanged-->
		
			<!--BindingContext-->
			<!--Gibt dem XAML bekannt, welche Daten wir binden wollen-->
			<!--BindingContext="{Binding Source={RelativeSource Self}}"-->
			<Label Text="{Binding Path=Counter}"
				   FontSize="40"/>
			<Button Clicked="Button_Clicked"/>
			<!--Veränderungen werden in der GUI nicht automatisch übernommen -> Benachrichtigung-->
		
			<!--INotifyPropertyChanged-->
			<!--Stellt einen Benachrichtigungsmechanismus bereit, welcher die GUI aktualisiert-->
			<!--Wird ausschließlich im Backend definiert-->
			<Label Text="{Binding MeinAuto.MaxV}"/>
			<Label Text="{Binding MeinAuto.Marke}"/>

			<!--ObservableCollection-->
			<!--Stellt eine Liste bereit, welche den Benachrichtigungsmechanismus implementiert hat-->
			<!--WICHTIG: Funktioniert nur wenn Elemente hinzugefügt/entfernt werden-->
		
			<!--Wenn kein Template für die Objekte besteht, wird die ToString Methode der Objekte ausgeführt-->
			<ListView ItemsSource="{Binding Fahrzeuge}"/>
		
			<!--.................................................................-->
		
			<!--DataTemplate-->
			<!--Definiert, wie Daten dargestellt werden-->
			<!--Beispiel: Logo pro Marke, MaxV-->
			<ListView ItemsSource="{Binding Fahrzeuge}">
				<ListView.ItemTemplate>
					<DataTemplate>
						<ViewCell>
							<StackLayout Orientation="Horizontal"
										 Spacing="10">
								<!--Marke (Enum) muss übersetzt zu Imagepfad -> Converter-->
								<!--<Image Source="{Binding Marke, Converter=...}"/>-->
								<Image Source="{Binding Marke, Converter={StaticResource ImgConv}}"
									   HeightRequest="50"
									   WidthRequest="100"
									   Aspect="AspectFit"/>
								<Line X1="0" X2="0" Y1="0" Y2="100" Stroke="Black"/>
								<Image Source="velocity.png"
									   HeightRequest="50"
									   Aspect="AspectFit"/>
								<Label Text="{Binding MaxV, StringFormat='{0} km/h'}"
									   VerticalOptions="CenterAndExpand"
									   FontSize="40"/>
							</StackLayout>
						</ViewCell>
					</DataTemplate>
				</ListView.ItemTemplate>
			</ListView>
			
			<!--MarkupExtensions-->
			
			<!--Problemstellung: Enum in der GUI anzeigen-->
			<!--Lösung 1: Liste aller Enumwerte im Backend definieren und per Binding anbinden-->
			<Picker ItemsSource="{Binding Wochentage}"/>
			
			<!--Lösung 2: Eigene MarkupExtension, welche die Liste selbst erzeugt, und keinen Platz im Backend benötigt-->
			<Picker ItemsSource="{local:Enum EnumType={x:Type http:HttpStatusCode}}"/>
			
			<!--"Fahrzeug hinzufügen"-Maske-->
			<Label Text="Maximalgeschwindigkeit: "/>
			<Entry Text="{Binding MeinAuto.MaxV}"/>

			<Label Text="Marke: "/>
			
			<Picker>
				<Picker.Items>
					<x:String>Audi</x:String>
					<x:String>BMW</x:String>
					<x:String>VW</x:String>
				</Picker.Items>
				<Picker.SelectedItem>
					<Binding Path="MeinAuto.Marke" Converter="{StaticResource SMConv}"/>
				</Picker.SelectedItem>
			</Picker>
			
			<Picker ItemsSource="{Binding AlleMarken}"
					SelectedItem="{Binding MeinAuto.Marke}"/>
			
			<Picker ItemsSource="{local:Enum EnumType={x:Type local:FahrzeugMarke}}"
					SelectedItem="{Binding MeinAuto.Marke}"/>

			<Button Text="Fahrzeug hinzufügen"
					Clicked="Button_Clicked_1"/>
		</VerticalStackLayout>
	</ScrollView>
</ContentPage>